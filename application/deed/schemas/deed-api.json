{
    "swagger": "2.0",
    "info": {
        "title": "Deed API",
        "description": "Land Registry Deed API",
        "version": "2.3.1"
    },
    "host": "api.landregistry.gov.uk",
    "schemes": [
        "https"
    ],
    "basePath": "/v1",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/deed/": {
            "post": {
                "summary": "Deed",
                "operationId": "addDeed",
                "description": "The post Deed endpoint creates a new deed based on the JSON provided.\n The reponse will return a URL that can retrieve the created deed. \n > REQUIRED: Land Registry system requests Conveyancer to confirm that the Borrowers identity has been established in accordance with Section 111 of the Network Access Agreement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Deed_Application"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "A URL to the GET endpoint for the deed returned on successful creation.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request due to invalid schema. Response will include 1 or more schema errors\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/deed/{deed_reference}": {
            "get": {
                "summary": "Deed",
                "description": "The Deed endpoint returns details of a specific deed based on the unique deed reference.\nThe response includes the Title Number, Property information, Borrower(s) information and deed information.\n",
                "produces": [
                    "application/json",
                    "application/pdf"
                ],
                "parameters": [{
                    "name": "deed_reference",
                    "in": "path",
                    "description": "Unique reference of the deed.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "Accept",
                    "in": "header",
                    "description": "Pass application/json for the deed as JSON or application/pdf to get a pdf",
                    "required": true,
                    "type": "string"
                }],
                "tags": [
                    "Deed"
                ],
                "responses": {
                    "200": {
                        "description": "A specific deed is returned in Operative Deed Format (application/json header). If the application/pdf header is given instead. This will return a PDF Document of the requested Deed.\n",
                        "schema": {
                            "$ref": "#/definitions/Operative_Deed"
                        }
                    },
                    "404": {
                        "description": "Deed not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Modify Deed",
                "description": "The Modify Deed endpoint modifies a deed based on the unique deed reference provided in the path.\nThe response will give the relative path to access the deed via the \"Get\" endpoint if an update is successful. Any modifications which aren't successful will show the relevant error messages. \n The provided payload for the modification will replace the existing deed. \n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "deed_reference",
                    "in": "path",
                    "description": "Unique reference of the deed.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Deed_Application"
                    }
                }],
                "tags": [
                    "Deed"
                ],
                "responses": {
                    "200": {
                        "description": "A specific deed is modified and the path returned",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Deed not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/deed/retrieve-signed": {
            "get": {
                "summary": "Retrieves ALL-SIGNED deed(s).",
                "description": "The Retrieve Signed endpoint checks the service for all deeds that have been completely signed by the borrowers or borrower. Only the deeds associated with the conveyancer are returned.\nThe response is a json array output containing the deed references e.g. 93e806ab-f1bc-4671-be3e-4cc68b21b77a.\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Retrieve all signed deeds"
                ],
                "responses": {
                    "200": {
                        "description": "ALL-SIGNED deeds are returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "No deed found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/deed/{deed_reference}/make-effective": {
            "post": {
                "summary": "Make Effective",
                "description": "The Make Effective endpoint triggers the service to make a deed effective, dating it with the timestamp of when this call is made.\nThe response includes the Title Number, Property information, Borrower(s) information and deed information, as well as the timestamp that is saved onto the deed.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "deed_reference",
                    "in": "path",
                    "description": "Unique reference of the deed.",
                    "required": true,
                    "type": "string"
                }],
                "tags": [
                    "Make Effective"
                ],
                "responses": {
                    "200": {
                        "description": "A specific deed is returned.",
                        "schema": {
                            "$ref": "#/definitions/Operative_Deed"
                        }
                    },
                    "400": {
                        "description": "One or more errors have been detected. A list of which should accompany this response.\n This is most likely to occur if the deed has already been made effective, or if not all borrowers have signed the deed.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Deed not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Borrower": {
            "type": "object",
            "required": [
                "surname",
                "forename",
                "id",
                "token"
            ],
            "properties": {
                "forename": {
                    "type": "string",
                    "pattern": "^(?!\\s*$).+"
                },
                "middle_name": {
                    "type": "string",
                    "pattern": "^(?!\\s*$).+"
                },
                "surname": {
                    "type": "string",
                    "pattern": "^(?!\\s*$).+"
                },
                "token": {
                    "type": "string",
                    "description": "Borrower token for accessing Borrower Frontend.",
                    "pattern": "^([a-zA-Z0-9]{8})$"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique borrower ID.",
                    "pattern": "^[0-9]+$"
                },
                "signature": {
                    "description": "Date and time the signature was applied.",
                    "type": "string"
                }
            }
        },
        "PrivateIndividualName": {
            "type": "object",
            "additionalProperties": false,
            "required": [
                "surname",
                "forename",
                "dob",
                "phone_number",
                "address"
            ],
            "properties": {
                "forename": {
                    "type": "string",
                    "pattern": "^(?!\\s*$).+"
                },
                "middle_name": {
                    "type": "string",
                    "pattern": "^(?!\\s*$).+"
                },
                "surname": {
                    "type": "string",
                    "pattern": "^(?!\\s*$).+"
                },
                "dob": {
                    "type": "string",
                    "pattern": "^(0[1-9]|[12][0-9]|3[01])[\\/\\-](0[1-9]|1[012])[/\\-]\\d{4}$"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female",
                        "Not Specified"
                    ]
                },
                "phone_number": {
                    "type": "string",
                    "pattern": "^(07[\\d]{9})$"
                },
                "address": {
                    "type": "string",
                    "pattern": "[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9](?:A-Z-245|[^CIKMOV]){2}"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique Borrower ID used in Modify Deed case only"
                }
            }
        },
        "ChargeClause": {
            "type": "object",
            "properties": {
                "cre_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "AdditionalProvisions": {
            "type": "array",
            "minItems": 0,
            "items": {
                "type": "object",
                "properties": {
                    "additional_provision_code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            }
        },
        "Lender": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "OpBorrowers": {
            "type": "array",
            "minItems": 1,
            "items": {
                "$ref": "#/definitions/Borrower"
            }
        },
        "Borrowers": {
            "type": "array",
            "minItems": 1,
            "items": {
                "$ref": "#/definitions/PrivateIndividualName"
            }
        },
        "Operative_Deed": {
            "type": "object",
            "properties": {
                "deed": {
                    "type": "object",
                    "description": "Unique deed, consisting of property, borrower and charge information as well as clauses for the deed.",
                    "properties": {
                        "title_number": {
                            "type": "string",
                            "description": "Unique Land Registry identifier for the registered estate."
                        },
                        "md_ref": {
                            "type": "string",
                            "description": "Land Registry assigned number for a Mortgage Deed (MD). If you wish to use an existing MD reference please prefix it with e- to comply with our system (eg e-MD12345)"
                        },
                        "borrowers": {
                            "$ref": "#/definitions/OpBorrowers"
                        },
                        "charge_clause": {
                            "$ref": "#/definitions/ChargeClause"
                        },
                        "additional_provisions": {
                            "$ref": "#/definitions/AdditionalProvisions"
                        },
                        "lender": {
                            "$ref": "#/definitions/Lender"
                        },
                        "effective_clause": {
                            "type": "string",
                            "description": "Text to display the make effective clause"
                        },
                        "property_address": {
                            "type": "string",
                            "description": "The address of property that the deed relates. This should be supplied in a comma separated format e.g. 30 wakefield rd, plymouth, PL6 3WA"
                        },
                        "reference": {
                            "type": "string",
                            "maxLength": 50,
                            "pattern": "^(?!\\s*$).+",
                            "description": "A conveyancer reference.  Can be displayed on the deed if the mortgage document template permits."
                        },
                        "date_of_mortgage_offer": {
                            "type": "string",
                            "maxLength": 50,
                            "pattern": "^(?!\\s*$).+",
                            "description": "Date that the mortgage offer was made.  Can be displayed on the deed if the mortgage document template permits."
                        },
                        "miscellaneous_information": {
                            "type": "string",
                            "maxLength": 250,
                            "pattern": "^(?!\\s*$).+",
                            "description": "Values unsuited to other keys. Can be displayed on the deed if the mortgage document template permits."
                        },
                        "deed_status": {
                            "type": "string",
                            "description": "Current state of the deed"
                        },
                        "effective_date": {
                            "type": "string",
                            "description": "An effective date is shown if the deed is made effective"
                        }
                    }
                }
            }
        },
        "Deed_Application": {
            "type": "object",
            "required": [
                "title_number",
                "borrowers",
                "md_ref",
                "identity_checked",
                "property_address"
            ],
            "properties": {
                "title_number": {
                    "type": "string",
                    "pattern": "^([A-Z]{0,3}[1-9][0-9]{0,5}|[0-9]{1,6}[ZT])$"
                },
                "borrowers": {
                    "$ref": "#/definitions/Borrowers"
                },
                "md_ref": {
                    "pattern": "^e-MD([0-9]{5}|([0-9]{3,4}[A-Z]{1}))$",
                    "type": "string"
                },
                "identity_checked": {
                    "pattern": "^[Y]$",
                    "type": "string"
                },
                "property_address": {
                    "pattern": "^(?!\\s*$).+",
                    "type": "string",
                    "description": "The address of property that the deed relates. This should be supplied in a comma separated format e.g. 30 wakefield rd, plymouth, PL6 3WA"
                },
                "reference": {
                    "type": "string",
                    "maxLength": 50,
                    "pattern": "^(?!\\s*$).+",
                    "description": "A conveyancer reference.  Can be displayed on the deed if the mortgage document template permits."
                },
                "date_of_mortgage_offer": {
                    "type": "string",
                    "maxLength": 50,
                    "pattern": "^(?!\\s*$).+",
                    "description": "Date that the mortgage offer was made.  Can be displayed on the deed if the mortgage document template permits."
                },
                "miscellaneous_information": {
                    "type": "string",
                    "maxLength": 250,
                    "pattern": "^(?!\\s*$).+",
                    "description": "Values unsuited to other keys. Can be displayed on the deed if the mortgage document template permits."
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}